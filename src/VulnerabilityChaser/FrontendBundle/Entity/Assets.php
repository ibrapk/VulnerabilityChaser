<?php

namespace VulnerabilityChaser\FrontendBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * pfmsc\FrontendBundle\Entity\Assets
 *
 * @ORM\Table(name="assets")
 * @ORM\Entity
 */
class Assets
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var text $name
     *
     * @ORM\Column(name="name", type="text", nullable=true)
     */
    private $name;

    /**
     * @var string $ip
     *
     * @ORM\Column(name="ip", type="string", length=255, nullable=true)
     */
    private $ip;

    /**
     * @var text $os
     *
     * @ORM\Column(name="os", type="text", nullable=true)
     */
    private $os;
    
    /**
     * @var text $systemType
     *
     * @ORM\Column(name="systemType", type="text", nullable=true)
     */
    private $systemType;

    /**
     * @var float $criticity
     *
     * @ORM\Column(name="criticity", type="float", nullable=true)
     */
    private $criticity;

    /**
     * @var Users
     *
     * @ORM\ManyToMany(targetEntity="Users", inversedBy="assets")
     * @ORM\JoinTable(name="assets_users",
     *   joinColumns={
     *     @ORM\JoinColumn(name="assets_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="users_id", referencedColumnName="id")
     *   }
     * )
     */
    private $users;

    /**
     * @var Agroups
     *
     * @ORM\ManyToOne(targetEntity="Agroups")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="aGroups_id", referencedColumnName="id")
     * })
     */
    private $agroups;

    public function __construct()
    {
        $this->users = new \Doctrine\Common\Collections\ArrayCollection();
    }
    

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param text $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * Get name
     *
     * @return text 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set ip
     *
     * @param string $ip
     */
    public function setIp($ip)
    {
        $this->ip = $ip;
    }

    /**
     * Get ip
     *
     * @return string 
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * Set os
     *
     * @param text $os
     */
    public function setOs($os)
    {
        $this->os = $os;
    }

    /**
     * Get os
     *
     * @return text 
     */
    public function getOs()
    {
        return $this->os;
    }

    /**
     * Set criticity
     *
     * @param float $criticity
     */
    public function setCriticity($criticity)
    {
        $this->criticity = $criticity;
    }

    /**
     * Get criticity
     *
     * @return float 
     */
    public function getCriticity()
    {
        return $this->criticity;
    }

    /**
     * Add users
     *
     * @param pfmsc\FrontendBundle\Entity\Users $users
     */
    public function addUsers(\pfmsc\FrontendBundle\Entity\Users $users)
    {
        $this->users[] = $users;
    }

    /**
     * Get users
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getUsers()
    {
        return $this->users;
    }

    /**
     * Set agroups
     *
     * @param pfmsc\FrontendBundle\Entity\Agroups $agroups
     */
    public function setAgroups(\pfmsc\FrontendBundle\Entity\Agroups $agroups)
    {
        $this->agroups = $agroups;
    }

    /**
     * Get agroups
     *
     * @return pfmsc\FrontendBundle\Entity\Agroups 
     */
    public function getAgroups()
    {
        return $this->agroups;
    }

    /**
     * Set systemType
     *
     * @param text $systemType
     */
    public function setSystemType($systemType)
    {
        $this->systemType = $systemType;
    }

    /**
     * Get systemType
     *
     * @return text 
     */
    public function getSystemType()
    {
        return $this->systemType;
    }
}