<?php

namespace VulnerabilityChaser\FrontendBundle\Controller;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;

class StatisticsController extends Controller {

	public function totalAction() {
		$em = $this->getDoctrine()->getEntityManager();
		
		
		$statusTypeClosed = $em->getRepository('FrontendBundle:StatusType')->findOneBy(array('status' => 'closed'));
		
		$statusTypeOpen = $em->getRepository('FrontendBundle:StatusType')->findOneBy(array('status' => 'open'));
		
		$query = $em->createQuery('SELECT COUNT(DISTINCT sv.id) FROM FrontendBundle:Status s
				JOIN s.vulnerability sv
				WHERE sv.severity = :severity
				AND s.status = :status
				Order By s.datestart ASC');
		
		$query->setParameter('severity', 0);
		$query->setParameter('status', $statusTypeClosed);
		$infoClosed = $query->getSingleScalarResult();
		$query->setParameter('status', $statusTypeOpen);
		$infoOpen = $query->getSingleScalarResult() - $infoClosed;
		
		$query->setParameter('severity', 1);
		$query->setParameter('status', $statusTypeClosed);
		$lowClosed = $query->getSingleScalarResult();
		$query->setParameter('status', $statusTypeOpen);
		$lowOpen = $query->getSingleScalarResult() - $lowClosed;
		
		$query->setParameter('severity', 2);
		$query->setParameter('status', $statusTypeClosed);
		$mediumClosed = $query->getSingleScalarResult();
		$query->setParameter('status', $statusTypeOpen);
		$mediumOpen = $query->getSingleScalarResult() - $mediumClosed;
		
		$query->setParameter('severity', 3);
		$query->setParameter('status', $statusTypeClosed);
		$highClosed = $query->getSingleScalarResult();
		$query->setParameter('status', $statusTypeOpen);
		$highOpen = $query->getSingleScalarResult() - $highClosed;
		
		$query->setParameter('severity', 4);
		$query->setParameter('status', $statusTypeClosed);
		$criticalClosed = $query->getSingleScalarResult();
		$query->setParameter('status', $statusTypeOpen);
		$criticalOpen = $query->getSingleScalarResult() - $criticalClosed;
		

		return $this->render('FrontendBundle:Statistics:total.html.twig', array('infoOpen' => $infoOpen, 
				'infoClosed' => $infoClosed,
				'lowOpen' => $lowOpen,
				'lowClosed' => $lowClosed,
				'mediumOpen' => $mediumOpen,
				'mediumClosed' => $mediumClosed,
				'highOpen' => $highOpen,
				'highClosed' => $highClosed,
				'criticalOpen' => $criticalOpen,
				'criticalClosed' => $criticalClosed,
				));
	}
}
